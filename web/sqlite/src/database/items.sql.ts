// Code generated by sqlc. DO NOT EDIT.
// source: items.sql

import { Database, QueryExecResult } from "@stephen/sql.js";








const getItemsStmt = `-- name: getItems :many
SELECT DISTINCT
    COALESCE(`+"`"+`name`+"`"+`, '') AS name
FROM `+"`"+`items`+"`"+` item
GROUP BY item.`+"`"+`name`+"`"+`
ORDER BY item.`+"`"+`name`+"`"+` ASC
LIMIT ?2
OFFSET ?1
`;


export type GetItemsParams = {
  offset: number | null;
  maxCount: number | null;
}







export function getItems(db: Database, arg: GetItemsParams): string[] {
  const result = db.exec(getItemsStmt, [arg.offset, arg.maxCount])
  if (result.length !== 1) {
    throw new Error("expected exec() to return a single query result")
  }

  const queryResult = result[0];
  const rvs: string[] = [];

  for (const row of queryResult.values) {
    
    
    if (typeof row[0] !== "string") { throw new Error(`expected type string for column name, but got ${typeof row[0]}`) };
    
    const rv: string = row[0];
    
    rvs.push(rv);
  }
  return rvs;
}













